% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/stderror_beta.R
\name{Firstorder_var}
\alias{Firstorder_var}
\title{Estimation of variance for first order parameters}
\usage{
Firstorder_var(
  X,
  covariate,
  Beta,
  r,
  bwd,
  kern = "Epanechnikov",
  cPCF = NULL,
  method = "single",
  cut = 1
)
}
\arguments{
\item{X}{A multivariate point process. X must be of class ppp.}

\item{covariate}{Covariates. The covariates must be a matrix. The rows corresponds to the points in the point pattern and the
columns indicates the corresponding covariates that are observed at the location of the point pattern.}

\item{Beta}{Estimated first order parameters. Beta must be a matrix. The number of rows must correspond to the number of covariates.
The number of columns must correspond to the number of point types.}

\item{r}{A vector of distances}

\item{bwd}{The bandwidth used}

\item{kern}{The kernel function. Default is Epanechnikov. Alternatively, the kernel function can be Indicator.}

\item{cPCF}{Non parametric estimates of cross PCF ratios. Default is cPCF = NULL. If cPCF = NULL, then the cross PCF ratios are estimated
using the function CrossPCF}

\item{method}{Method to estimate the variance of the first order estimating function. Default method = "single", alternatively method = "pool".
If method = "single", the variance is estimated based on single estimates of cross PCF ratios. If method = "pool", the variance is estimated
based on an estimate of the pooled cross PCF.}

\item{cut}{For refined cross PCF ratio estimator. Default cut = NULL. If cut = NULL, the parameter R^* for the constraint is chosen
manually using the function ChooseRange}
}
\value{
Return estimated cross PCF ratios, r distances used, bandwidth used, refined cross PCF ratios and R^*
}
\description{
This is a method to estimate the variance of the first order parameters
}
\examples{

### First order analysis of Washington D.C. street crimes ###

nspecies <- length(unique(markedprocess$marks))
ncovs <- dim(Z_process)[2]

# Initial parameters for street crime data
Beta0=matrix(runif(nspecies*ncovs,-0.5,0.5),nrow =nspecies)

# Choosing the last type of street crime as the baseline
Beta0 <- as.matrix(t(scale(Beta0,center=Beta0[nspecies,],scale=FALSE)))

# Parameter estimation
Betahat=FirstOrderCCL(X=markedprocess,Beta0 = Beta0,covariate = Z_process)

# Parameter estimates
colnames(Betahat$betahat)=c("Burglary", "Assault w. weapon", "Motor v. theft",
"Theft f. auto", "Robbery", "Other theft (baseline)")
rownames(Betahat$betahat)=c("Intercept", "\%African", "\%Hispanic", "\%Males",
 "Median income", "\%Household","\%Bachelor", "Distance to police station")
Betahat

### Non-parametric estimates of cross PCF ratios ###

rseq = seq(0,3000,length=100)
cpcf=CrossPCF(X = markedprocess,covariate = Z_process,Beta = Betahat$betahat,r = rseq
,bwd = 200,cut = NULL)

plot(rseq,rep(1,100),type="l",col=1,ylim=c(0,2),xlab="r",ylab="",main="PCFs")
for(i in 1:(nspecies-1)){
  lines(rseq,cpcf$cPCF.m[i,i,],,col=i)
}

plot(rseq,rep(1,100),type="l",col=1,ylim=c(0,2),xlab="r",ylab="",main="PCFs")
for(i in 1:(nspecies-1)){
  for(j in 1:(nspecies-1)){
    if(i==j){next}
    lines(rseq,cpcf$cPCF.m[i,j,],,col=1)
  }
}

### Standard errors for Beta ###

var.est=Firstorder_var(X=markedprocess,covariate = Z_process,Beta=Betahat$betahat,
r = seq(0,3000,length=100),bwd = 200,cPCF = cpcf$cPCF.m,method = "pool")

std.error=matrix(sqrt(diag(var.est$COV)),nrow=ncovs)
colnames(std.error)=c("Burglary", "Assault w. weapon", "Motor v. theft","Theft f. auto", "Robbery")
rownames(std.error)=c("Intercept", "\%African", "\%Hispanic", "\%Males",
 "Median income", "\%Household","\%Bachelor", "Distance to police station")
std.error

}
\references{
Hessellund, K. B., Xu, G., Guan, Y. and Waagepetersen, R. (2020)
Second order semi-parametric inference for multivariate log Gaussian Cox processes.
}
\author{
Kristian BjÃ¸rn Hessellund, Ganggang Xu, Yongtao Guan and Rasmus Waagepetersen.
}
